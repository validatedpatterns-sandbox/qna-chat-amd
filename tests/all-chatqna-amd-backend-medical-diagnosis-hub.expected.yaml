---
# Source: chatqna-amd-backend/templates/backend-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker_compose.yaml
    kompose.version: 1.33.0 (3ce457399)
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-wave: "5"
  labels:
    io.kompose.service: chatqna-backend
  name: chatqna-backend
  namespace: amd-llm
spec:
  ports:
    - name: "5008"
      port: 5008
      targetPort: 8888
  selector:
    io.kompose.service: chatqna-backend
---
# Source: chatqna-amd-backend/templates/backend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker_compose.yaml
    kompose.version: 1.33.0 (3ce457399)
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-wave: "5"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"chatqna-backend:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"chatqna-backend-server\")].image"}]'
  labels:
    io.kompose.service: chatqna-backend
  name: chatqna-backend
  namespace: amd-llm
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: chatqna-backend
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker_compose.yaml
        kompose.version: 1.33.0 (3ce457399)
      labels:
        io.kompose.network/amd-default: "true"
        io.kompose.service: chatqna-backend
    spec:
      containers:
        - env:
            - name: MEGA_SERVICE_HOST_IP
              value: megaservice-amd-llm.apps.region.example.com
            - name: EMBEDDING_SERVER_HOST_IP
              value: tei-embedding-service.amd-llm.svc.cluster.local
            - name: EMBEDDING_SERVER_PORT
              value: "5007"
            - name: RETRIEVER_SERVICE_HOST_IP
              value: retriever.amd-llm.svc.cluster.local
            - name: RETRIEVER_SERVICE_PORT
              value: "5004"
            - name: RERANK_SERVER_HOST_IP
              value: tei-reranker-service.amd-llm.svc.cluster.local
            - name: RERANK_SERVER_PORT
              value: "5006"
            - name: LLM_SERVER_HOST_IP
              value: llm-tgi.amd-llm.svc.cluster.local
            - name: LLM_SERVER_PORT
              value: "5005"
            - name: PYTHONPATH
              value: ${PYTHONPATH}:/home/user/GenAIComps
            - name: LOGFLAG
              value: "True"
          image:
            image-registry.openshift-image-registry.svc:5000/opea/chatqna:latest
          name: chatqna-backend-server
          ports:
            - containerPort: 8888
              protocol: TCP
      restartPolicy: Always
---
# Source: chatqna-amd-backend/templates/backend-buildconfig.yaml
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  name: chatqna-backend
  namespace: amd-llm
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  output:
    to:
      kind: "ImageStreamTag"
      name: "chatqna-backend:latest"
  failedBuildsHistoryLimit: 5
  successfulBuildsHistoryLimit: 5
  nodeSelector: null
  postCommit: {}
  resources: {}
  runPolicy: SerialLatestOnly
  source:
    contextDir: ChatQnA
    git:
      ref: ff66600
      uri: https://github.com/opea-project/GenAIExamples.git
    type: Git
  strategy:
    type: Docker
    dockerStrategy:
      dockerfilePath: Dockerfile

  triggers:
    - type: ConfigChange
---
# Source: chatqna-amd-backend/templates/backend-imagestream.yaml
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: chatqna-backend
  namespace: amd-llm
spec:
  lookupPolicy:
    local: true
---
# Source: chatqna-amd-backend/templates/backend-route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: chatqna-backend
  namespace: amd-llm
spec:
  host: megaservice-amd-llm.apps.region.example.com
  port:
    targetPort: 5008
  tls:
    termination: edge
  to:
    name: chatqna-backend
