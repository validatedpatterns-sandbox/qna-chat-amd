---
# Source: embedding/templates/embedding-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker_compose.yaml
    kompose.version: 1.33.0 (3ce457399)
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-wave: "5"
  labels:
    io.kompose.service: embedding
  name: embedding
  namespace: amd-llm
spec:
  ports:
    - name: "5002"
      port: 5002
      targetPort: 6000
  selector:
    io.kompose.service: embedding
---
# Source: embedding/templates/embedding-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker_compose.yaml
    kompose.version: 1.33.0 (3ce457399)
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-wave: "5"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"embedding:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"embedding-server\")].image"}]'
  labels:
    io.kompose.service: embedding
  name: embedding
  namespace: amd-llm
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: embedding
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker_compose.yaml
        kompose.version: 1.33.0 (3ce457399)
      labels:
        io.kompose.network/chatqna-default: "true"
        io.kompose.service: embedding
    spec:
      containers:
        - env:
            - name: HOME
              value: /tmp/temp-data
            - name: PYTHONPATH
              value: /home/user/.local/lib/python3.11/site-packages:/home/user:/home
            - name: TEI_EMBEDDING_ENDPOINT
              value: "http://tei-embedding-service.amd-llm.svc.cluster.local:5007"
          image:
            image-registry.openshift-image-registry.svc:5000/opea/embedding:latest
          name: embedding-server
          ports:
            - containerPort: 6000
              protocol: TCP
          volumeMounts:
            - name: temp-data
              mountPath: /tmp/temp-data
      restartPolicy: Always
      volumes:
        - name: temp-data
          emptyDir: {}
---
# Source: embedding/templates/embedding-buildconfig.yaml
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  name: embedding
  namespace: amd-llm
spec:
  output:
    to:
      kind: "ImageStreamTag"
      name: "embedding:latest"
  failedBuildsHistoryLimit: 5
  successfulBuildsHistoryLimit: 5
  nodeSelector: null
  postCommit: {}
  resources: {}
  runPolicy: SerialLatestOnly
  source:
    git:
      ref: af3ff62
      uri: https://github.com/opea-project/GenAIComps.git
    type: Git
  strategy:
    type: Docker
    dockerStrategy:
      dockerfilePath: comps/embeddings/src/Dockerfile

  triggers:
    - type: ConfigChange
---
# Source: embedding/templates/embedding-imagestream.yaml
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: embedding
  namespace: amd-llm
spec:
  lookupPolicy:
    local: true
---
# Source: embedding/templates/embedding-route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: embedding
  namespace: amd-llm
spec:
  host: megaservice-amd-llm.apps.region.example.com
  path: /v1/embeddings
  port:
    targetPort: 5002
  tls:
    termination: edge
  to:
    name: embedding
